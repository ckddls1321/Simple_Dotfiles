" ----------------------------------------------------------------------
" | General Settings                                                   |
" ----------------------------------------------------------------------
set nocompatible    " Don't make Vim vi-compatibile.
set autoread        "auto reload when file changed"
set autowrite       "auto relead when edit another file"
set mouse=a         "Use Mouse on terminal"
set sel=exclusive
set mps+=<:>
set fileformats=unix,dos,mac
set fileencoding=utf-8
set fileencodings=utf-8
set ttyfast
set smarttab
set autochdir
set ttyfast
set smartindent
set autoindent
if exists('+breakindent')
    set breakindent showbreak=\ +
endif
set gdefault
set smartcase
set ruler
set wrap linebreak nolist
set ignorecase
set colorcolumn=+1
set lbr
set showmatch
set fencs=ucs-bom,utf-8,euc-kr.latin1
set backupdir=~/.vim/backup
set foldenable
set foldopen=block,hor,insert,jump,mark,percent,quickfix,search,tag,undo
set modifiable
set exrc
set secure
set listchars=tab:>-
set relativenumber

syntax on                      " Enable syntax highlighting.

if has("autocmd")
    filetype plugin indent on
    "           │     │    └──── Enable file type detection.
    "           │     └───────── Enable loading of indent file.
    "           └─────────────── Enable loading of plugin files.
endif

set autoindent                 " Copy indent to the new line.

set backspace=indent           " ┐
set backspace+=eol             " │ Allow `backspace`
set backspace+=start           " ┘ in insert mode.

set backupskip=/tmp/*          " ┐ Don't create backups
set backupskip+=/private/tmp/* " ┘ for certain files.

set clipboard=unnamed          " ┐
" │ Use the system clipboard
if has("unnamedplus")          " │ as the default register.
    set clipboard+=unnamedplus " │
endif                          " ┘

set cpoptions+=$               " When making a change, don't
" redisplay the line, and instead,
" put a `$` sign at the end of
" the changed text.

set colorcolumn=73             " Highlight certain column(s).
set cursorline                 " Highlight the current line.
set directory=~/.vim/swaps     " Set directory for swap files.
set encoding=utf-8 nobomb      " Use UTF-8 without BOM.
set hlsearch                   " Enable search highlighting.
set ignorecase                 " Ignore case in search patterns.

set incsearch                  " Highlight search pattern
" as it is being typed.

set laststatus=2               " Always show the status line.

set lazyredraw                 " Do not redraw the screen while
" executing macros, registers
" and other commands that have
" not been typed.

set listchars=tab:▸\           " ┐
set listchars+=trail:·         " │ Use custom symbols to
set listchars+=eol:↴           " │ represent invisible characters.
set listchars+=nbsp:_          " ┘

set magic                      " Enable extended regexp.
set mousehide                  " Hide mouse pointer while typing.
set noerrorbells               " Disable error bells.

set nojoinspaces               " When using the join command,
" only insert a single space
" after a `.`, `?`, or `!`.

set nostartofline              " Kept the cursor on the same column.
set report=0                   " Report the number of lines changed.
set scrolloff=5                " When scrolling, keep the cursor
" 5 lines below the top and 5 lines
" above the bottom of the screen.
set shortmess=aAItW            " Avoid all the hit-enter prompts.
set showcmd                    " Show the command being typed.
set showmode                   " Show current mode.
set spelllang=en_us            " Set the spellchecking language.
set smartcase                  " Override `ignorecase` option
" if the search pattern contains
" uppercase characters.
set synmaxcol=2500             " Limit syntax highlighting (this
" avoids the very slow redrawing
" when files contain long lines).
set tabstop=4                  " ┐
set softtabstop=4              " │ Set global <TAB> settings.
set shiftwidth=4               " │
set expandtab                  " ┘

set ttyfast                    " Enable fast terminal connection.
set undodir=~/.vim/undos       " Set directory for undo files.
set undofile                   " Automatically save undo history.
set virtualedit=all            " Allow cursor to be anywhere.

set visualbell                 " ┐
set noerrorbells               " │ Disable beeping and window flashing
set t_vb=                      " ┘ https://vim.wikia.com/wiki/Disable_beeping

set wildmenu                   " Enable enhanced command-line
" completion (by hitting <TAB> in
" command mode, Vim will show the
" possible matches just above the
" command line with the first
" match highlighted).

set winminheight=0             " Allow windows to be squashed.
syntax on
set tags+=tags;/ "Ctags Finding Upper directory"
let mapleader = ","
command! -bang E e<bang>
command! -bang Q q<bang>
command! -bang W w<bang>
command! -bang QA qa<bang>
command! -bang Qa qa<bang>
command! -bang Wa wa<bang>
command! -bang WA wa<bang>
command! -bang Wq wq<bang>
command! -bang WQ wq<bang>
nnoremap t1 1gt
nnoremap t2 2gt
nnoremap t3 3gt
nnoremap t4 4gt
nnoremap t5 5gt
nnoremap t6 6gt
nnoremap t7 7gt
nnoremap t8 8gt
nnoremap t9 9gt
nnoremap tf :tabfirst<CR>
nnoremap tn :tabnext<CR>
nnoremap tp :tabprev<CR>
nnoremap tl :tablast<CR>
nnoremap te :tabedit<CR>
nnoremap tm :tabm<CR>
nnoremap tc :tabclose
" ----------------------------------------------------------------------
" | Plugins                                                            |
" ----------------------------------------------------------------------
" Use Vundle to manage the Vim plugins.
" https://github.com/VundleVim/Vundle.vim
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
" Disable file type detection
" (this is required by Vundle).
filetype off
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
" Include Vundle in the runtime path.
call plug#begin('~/.vim/plugged')

Plug 'mhinz/vim-signify'
Plug 'junegunn/tabularize'
Plug 'junegunn/fzf'
Plug 'mileszs/ack.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'sjl/gundo.vim'
Plug 'roxma/vim-paste-easy'
Plug 'sheerun/vim-polyglot'
Plug 'shougo/neosnippet-snippets'
if has('nvim')
    Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
    Plug 'Shougo/deoplete.nvim'
    Plug 'roxma/nvim-yarp'
    Plug 'roxma/vim-hug-neovim-rpc'
endif
Plug 'terryma/vim-multiple-cursors'
Plug 'w0rp/ale'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'liuchengxu/vista.vim'
Plug 'easymotion/vim-easymotion'      "Vim-easymotion:extend f,s search etc
Plug 'christoomey/vim-tmux-navigator' "Vim-Tmux Integration
Plug 'edkolev/tmuxline.vim'         "TmuxStatus
Plug 'vim-airline/vim-airline'        "Vim status line
Plug 'vim-airline/vim-airline-themes'
Plug 'jiangmiao/auto-pairs'         "Auto closing Bracket,parens,quotes"
Plug 'flazz/vim-colorschemes'       "Adding vim colorscheme"
Plug 'ap/vim-css-color'           "Show CSS color on vim
Plug 'gregsexton/matchtag'        "Show matched (),<>
Plug 'tpope/vim-sensible'
Plug 'kshenoy/vim-signature'      "Highlight mark of vim
Plug 'mhinz/vim-startify'
Plug 'kien/ctrlp.vim'
Plug 'shougo/vimfiler.vim'    "@@FILE EXPLORER@@ MUST HAVE
Plug 'dietsche/vim-lastplace'     "Save cursor last position

call plug#end()
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
" Re-enable file type detection
" (disabling it was required by Vundle).
runtime! plugin/sensible.vim
syntax enable
filetype plugin indent on
filetype plugin on
filetype on
let g:deoplete#enable_at_startup = 1
let g:ale_fix_on_save = 1
" ----------------------------------------------------------------------
" | Color Scheme                                                       |
" ----------------------------------------------------------------------
set t_Co=256                   " Enable full-color support.
set background=dark            " Use colors that look good
if !has("gui_running")
    let g:solarized_contrast = "high"
    let g:solarized_termcolors = 256
    let g:solarized_termtrans = 1
    let g:solarized_visibility = "high"
endif
colorscheme solarized
" ----------------------------------------------------------------------
" | Plugins - Indent Guides                                            |
" ----------------------------------------------------------------------
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd
            \ guibg=#00323D
            \ ctermbg=Magenta
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven
            \ guibg=#073642
            \ ctermbg=DarkMagenta
" ----------------------------------------------------------------------
" | VIM commentary
" ----------------------------------------------------------------------
autocmd FileType apache setlocal commentstring=#\ %s
" ----------------------------------------------------------------------
" | Automatic Commands                                                 |
" ----------------------------------------------------------------------
if has("autocmd")
    " Autocommand Groups.
    " http://learnvimscriptthehardway.stevelosh.com/chapters/14.html
    " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    " Automatically reload the configurations from
    " the `~/.vimrc` file whenever they are changed.
    augroup auto_reload_vim_configs
        autocmd!
        autocmd BufWritePost vimrc source $MYVIMRC
    augroup END
    " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    " Use relative line numbers.
    " http://jeffkreeftmeijer.com/2012/relative-line-numbers-in-vim-for-super-fast-movement/
    augroup relative_line_numbers
        autocmd!
        " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        " Automatically switch to absolute
        " line numbers when Vim loses focus.
        autocmd FocusLost * :set number
        " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        " Automatically switch to relative
        " line numbers when Vim gains focus.
        autocmd FocusGained * :set relativenumber
        " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        " Automatically switch to absolute
        " line numbers when Vim is in insert mode.
        autocmd InsertEnter * :set number
        " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        " Automatically switch to relative
        " line numbers when Vim is in normal mode.
        autocmd InsertLeave * :set relativenumber

    augroup END
    " - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
endif
" ----------------------------------------------------------------------
" | VIMFILER                                                  |
" ----------------------------------------------------------------------
autocmd FileType vimfiler nmap <buffer> <CR> <Plug>(vimfiler_expand_or_edit)
noremap <silent> :tree :VimFiler -split -simple -winwidth=25 -no-quit
noremap <leader>t :VimFiler -split -simple -winwidth=25 -no-quit<ENTER>
let g:vimfiler_as_default_explorer = 1
let g:vimfiler_ignore_pattern ='\%(.ini\|.sys\|.o\|.d\|.bat\|.BAK\|.DAT\)$\|^\%(.git\)$'
" ----------------------------------------------------------------------
" | VIM EASYMOTION                                                  |
" ----------------------------------------------------------------------
map  <Leader>f <Plug>(easymotion-bd-f)
nmap <Leader>f <Plug>(easymotion-overwin-f)
nmap <Leader>s <Plug>(easymotion-overwin-f2)
" " Move to line
map <Leader>L <Plug>(easymotion-bd-jk)
nmap <Leader>L <Plug>(easymotion-overwin-line)
" " Move to word
map  <Leader>w <Plug>(easymotion-bd-w)
nmap <Leader>w <Plug>(easymotion-overwin-w)
" " Gif config
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)
" " Gif config
map / /\v
map  <Leader>/ <Plug>(easymotion-sn)
omap <Leader>/ <Plug>(easymotion-tn)
map  <C-n> <Plug>(easymotion-next)
map  <S-m> <Plug>(easymotion-prev)
let g:EasyMotion_startofline = 0 " keep cursor column when JK motion
let g:EasyMotion_smartcase = 1
" ----------------------------------------------------------------------
" | Fuzzy Finder
" ----------------------------------------------------------------------
"-----------IGNORE settings--------"
set wildmode=list:longest,full
set wildignore=*.o,*.obj "stuff to ignore when tab completing
set wildignore+=*DS_Store*
set wildignore+=*sass-cache*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif
set wildignore+=*.so,*.swp,*.zip,*/.Trash/**,*.pdf,*.dmg,*/Library/**,*/.rbenv/**
set wildignore+=*/.nx/**,*.app
set wildignore+=*/build/**
